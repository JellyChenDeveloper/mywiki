(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{533:function(t,e,n){"use strict";n.r(e);var a=n(1),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"markdownlint-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#markdownlint-cli"}},[t._v("#")]),t._v(" markdownlint-cli")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/igorshubovych/markdownlint-cli/actions?query=workflow%3ACI",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://github.com/igorshubovych/markdownlint-cli/workflows/CI/badge.svg?branch=master",alt:"GitHub Actions Build Status"}}),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("Command Line Interface for "),n("a",{attrs:{href:"https://github.com/DavidAnson/markdownlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("MarkdownLint"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("Github address is "),n("a",{attrs:{href:"https://github.com/igorshubovych/markdownlint-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/igorshubovych/markdownlint-cli"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g markdownlint-cli\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h2",{attrs:{id:"usage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("markdownlint --help\n\n  Usage: markdownlint "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("directories"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("globs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  MarkdownLint Command Line Interface\n\n  Options:\n\n    -h, --help                                  output usage information\n    -V, --version                               output the version number\n    -f, --fix                                   fix basic errors "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("does not work with STDIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -s, --stdin                                 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" from STDIN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("does not work with files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -o, --output "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("outputFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),t._v(" issues to "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("no console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -c, --config "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("configFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                   configuration "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("JSON, JSONC, JS, or YAML"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -i, --ignore "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("directory"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("glob"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("          file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" to ignore/exclude\n    -p, --ignore-path "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                    path to "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" with ignore pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    -r, --rules  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("directory"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("glob"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("package"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  custom rule files\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("h3",{attrs:{id:"globbing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#globbing"}},[t._v("#")]),t._v(" Globbing")]),t._v(" "),n("p",[n("code",[t._v("markdownlint-cli")]),t._v(" supports advanced globbing patterns like "),n("code",[t._v("**/*.md")]),t._v(" ("),n("a",{attrs:{href:"https://github.com/isaacs/node-glob/blob/master/README.md#glob-primer",target:"_blank",rel:"noopener noreferrer"}},[t._v("more information"),n("OutboundLink")],1),t._v(").\nWith shells like Bash, it may be necessary to quote globs so they are not interpreted by the shell.\nFor example, "),n("code",[t._v("--ignore *.md")]),t._v(" would be expanded by Bash to "),n("code",[t._v("--ignore a.md b.md ...")]),t._v(" before invoking "),n("code",[t._v("markdownlint-cli")]),t._v(", causing it to ignore only the first file because "),n("code",[t._v("--ignore")]),t._v(" takes a single parameter (though it can be used multiple times).\nQuoting the glob like "),n("code",[t._v("--ignore '*.md'")]),t._v(" passes it through unexpanded and ignores the set of files.")]),t._v(" "),n("h4",{attrs:{id:"globbing-examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#globbing-examples"}},[t._v("#")]),t._v(" Globbing examples")]),t._v(" "),n("p",[t._v("To lint all Markdown files in a Node.js project (excluding dependencies), the following commands might be used:")]),t._v(" "),n("p",[t._v("Windows CMD: "),n("code",[t._v("markdownlint **/*.md --ignore node_modules")])]),t._v(" "),n("p",[t._v("Linux Bash: "),n("code",[t._v("markdownlint '**/*.md' --ignore node_modules")])]),t._v(" "),n("h3",{attrs:{id:"ignoring-files"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ignoring-files"}},[t._v("#")]),t._v(" Ignoring files")]),t._v(" "),n("p",[t._v("If present in the current folder, a "),n("code",[t._v(".markdownlintignore")]),t._v(" file will be used to ignore files and/or directories according to the rules for "),n("a",{attrs:{href:"https://git-scm.com/docs/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitignore"),n("OutboundLink")],1),t._v(".\nIf the "),n("code",[t._v("-p")]),t._v("/"),n("code",[t._v("--ignore-path")]),t._v(" option is present, the specified file will be used instead of "),n("code",[t._v(".markdownlintignore")]),t._v(".")]),t._v(" "),n("p",[t._v("The order of operations is:")]),t._v(" "),n("ul",[n("li",[t._v("Enumerate files/directories/globs passed on the command line")]),t._v(" "),n("li",[t._v("Apply exclusions from "),n("code",[t._v("-p")]),t._v("/"),n("code",[t._v("--ignore-path")]),t._v(" (if specified) or "),n("code",[t._v(".markdownlintignore")]),t._v(" (if present)")]),t._v(" "),n("li",[t._v("Apply exclusions from any "),n("code",[t._v("-i")]),t._v("/"),n("code",[t._v("--ignore")]),t._v(" option(s) that are specified")])]),t._v(" "),n("h3",{attrs:{id:"fixing-errors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fixing-errors"}},[t._v("#")]),t._v(" Fixing errors")]),t._v(" "),n("p",[t._v("When the "),n("code",[t._v("--fix")]),t._v(" option is specified, "),n("code",[t._v("markdownlint-cli")]),t._v(" tries to apply all fixes reported by the active rules and reports any errors that remain.\nBecause this option makes changes to the input files, it is good to make a backup first or work with files under source control so any unwanted changes can be undone.")]),t._v(" "),n("blockquote",[n("p",[t._v("Because not all rules include fix information when reporting errors, fixes may overlap, and not all errors are fixable, "),n("code",[t._v("--fix")]),t._v(" will not usually address all errors.")])]),t._v(" "),n("h2",{attrs:{id:"configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),n("p",[n("code",[t._v("markdownlint-cli")]),t._v(" reuses "),n("a",{attrs:{href:"https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("the rules"),n("OutboundLink")],1),t._v(" from "),n("code",[t._v("markdownlint")]),t._v(" package.")]),t._v(" "),n("p",[t._v("Configuration is stored in JSON, JSONC, YAML, or INI files in the same "),n("a",{attrs:{href:"https://github.com/DavidAnson/markdownlint#optionsconfig",target:"_blank",rel:"noopener noreferrer"}},[t._v("config format"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("The example of configuration file:")]),t._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"MD003"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"style"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"atx_closed"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"MD007"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"indent"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"no-hard-tabs"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"whitespace"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("See "),n("a",{attrs:{href:"https://github.com/igorshubovych/markdownlint-cli/blob/master/test/test-config.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("test configuration file"),n("OutboundLink")],1),t._v(" or "),n("a",{attrs:{href:"https://github.com/DavidAnson/markdownlint/tree/main/style",target:"_blank",rel:"noopener noreferrer"}},[t._v("style folder"),n("OutboundLink")],1),t._v(" for more examples.")]),t._v(" "),n("p",[t._v("The CLI argument "),n("code",[t._v("--config")]),t._v(" is not required.\nIf it is not provided, "),n("code",[t._v("markdownlint-cli")]),t._v(" looks for the file "),n("code",[t._v(".markdownlint.json")]),t._v("/"),n("code",[t._v(".markdownlint.yaml")]),t._v("/"),n("code",[t._v(".markdownlint.yml")]),t._v(" in current folder, or for the file "),n("code",[t._v(".markdownlintrc")]),t._v(" in the current or all parent folders.\nThe algorithm is described in detail on the "),n("a",{attrs:{href:"https://www.npmjs.com/package/rc#standards",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("rc")]),t._v(" package page"),n("OutboundLink")],1),t._v(".\nIf the "),n("code",[t._v("--config")]),t._v(" argument is provided, the file must be valid JSON, JSONC, JS, or YAML.\nJS configuration files contain JavaScript code, must have the "),n("code",[t._v(".js")]),t._v(" extension, and must export (via "),n("code",[t._v("module.exports = ...")]),t._v(") a configuration object of the form shown above.\nA JS configuration file may internally "),n("code",[t._v("require")]),t._v(" one or more npm packages as a way of reusing configuration across projects.")]),t._v(" "),n("blockquote",[n("p",[t._v("JS configuration files must be provided via the "),n("code",[t._v("--config")]),t._v(" argument; they are not automatically loaded because running untrusted code is a security concern.")])]),t._v(" "),n("h2",{attrs:{id:"exit-codes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exit-codes"}},[t._v("#")]),t._v(" Exit codes")]),t._v(" "),n("p",[n("code",[t._v("markdownlint-cli")]),t._v(" returns one of the following exit codes:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("0")]),t._v(": Program ran successfully")]),t._v(" "),n("li",[n("code",[t._v("1")]),t._v(": Linting errors / bad parameter")]),t._v(" "),n("li",[n("code",[t._v("2")]),t._v(": Unable to write "),n("code",[t._v("-o")]),t._v("/"),n("code",[t._v("--output")]),t._v(" output file")]),t._v(" "),n("li",[n("code",[t._v("3")]),t._v(": Unable to load "),n("code",[t._v("-r")]),t._v("/"),n("code",[t._v("--rules")]),t._v(" custom rule")])]),t._v(" "),n("h2",{attrs:{id:"related"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#related"}},[t._v("#")]),t._v(" Related")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/DavidAnson/markdownlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("markdownlint"),n("OutboundLink")],1),t._v(" - API for this module")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/isaacs/node-glob",target:"_blank",rel:"noopener noreferrer"}},[t._v("glob"),n("OutboundLink")],1),t._v(" - Pattern matching implementation")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/kaelzhang/node-ignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("ignore"),n("OutboundLink")],1),t._v(" - "),n("code",[t._v(".markdownlintignore")]),t._v(" implementation")])]),t._v(" "),n("h2",{attrs:{id:"license"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),n("p",[t._v("MIT © Igor Shubovych")])])}),[],!1,null,null,null);e.default=s.exports}}]);