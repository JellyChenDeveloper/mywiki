(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{523:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[s._v("#")]),s._v(" type")]),s._v(" "),n("p",[s._v("显示指定命令的类型，判断给出的指令是内部指令还是外部指令。")]),s._v(" "),n("h2",{attrs:{id:"用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#详解"}},[s._v("#")]),s._v(" 详解")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("type: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-afptP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 名称 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("名称 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n显示命令类型的信息。\n\n对于每一个 NAME 名称，指示如果作为命令它将如何被解释。\n\n选项：\n  -a 显示所有包含名称为 NAME 的可执行文件的位置；包括别名、内建和函数。仅当 "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("-p' 选项没有使用时\n  -f 抑制 shell 函数查询\n  -P 为每个 NAME 名称惊醒 "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v(" 路径搜索，即使它是别名、内建或函数，并且返回将被执行的磁盘上文件的名称。\n  -p 返回将被执行的磁盘上文件的名称，或者当 "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" -t NAME"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'不返回 `file'")]),s._v(" 时，不返回任何值。\n  -t 输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”；\n\n    磁盘文件或没有找到。\n\n参数：\n  NAME 将要解析的命令。\n\n退出状态：\n如果所有的 NAME 命令都找到则返回成功；任何找不到则失败。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);